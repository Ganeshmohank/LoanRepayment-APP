{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/calculation.service\";\nexport let PaymenttableComponent = /*#__PURE__*/(() => {\n  class PaymenttableComponent {\n    constructor(calculationService) {\n      this.calculationService = calculationService;\n      this.p = 3000000;\n      this.loan = 3000000;\n      this._i = 0.07;\n      this.t = 10;\n      this.amountSaved = 0.00;\n      this.prepayment = 0.00;\n      this.totalAmountAfterPrepayment = 0.00;\n      this.x = this.calculationService.getEmiPerMonth(this.loan, this.calculationService.getInterestRatePerMonth(this._i), this.calculationService.getMonths(this.t));\n      this.initialTotalAmount = this.calculationService.getEmiPerMonth(this.loan, this.calculationService.getInterestRatePerMonth(this._i), this.calculationService.getMonths(this.t)) * this.calculationService.getMonths(this.t);\n      this.b = this.calculationService.getInterestAmountPermonth(3000000, this.calculationService.getInterestRatePerMonth(0.07));\n      this.m = this.calculationService.getMonths(10);\n      this.client(1);\n    }\n\n    ngOnInit() {}\n\n    onclickcall() {\n      this.onclick(100000, 5);\n    }\n\n    onclick(amount, currentmonth) {\n      this.p = this.p - amount;\n      let updatedmonths = this.calculationService.getMonths(this.t) - currentmonth;\n      this.x = this.calculationService.getEmiPerMonth(this.p, this.calculationService.getInterestRatePerMonth(this._i), updatedmonths);\n      this.client(currentmonth);\n      this.prepayment = this.prepayment + amount;\n    }\n\n    client(currentmonth) {\n      for (let i = currentmonth; i <= this.calculationService.getMonths(this.t); i++) {\n        this.totalAmountAfterPrepayment = Number(this.x) + this.totalAmountAfterPrepayment + this.prepayment;\n        if (this.p <= 0) break;\n        /* console.log(\r\n          this.x.toFixed(2),\r\n          i,\r\n          this.p.toFixed(2),\r\n          this.calculationService.getInterestAmountPermonth(this.p, this.calculationService.getInterestRatePerMonth(this._i)).toFixed(2),\r\n          this.calculationService.getPrincipalAmountPermonth(this.x,this.calculationService.getInterestAmountPermonth(this.p,this.calculationService.getInterestRatePerMonth(this._i))).toFixed(2)\r\n        ); */\n\n        let y = this.calculationService.getInterestAmountPermonth(this.p, this.calculationService.getInterestRatePerMonth(this._i));\n        let prm = this.x - y;\n        this.p = this.p - prm;\n      }\n\n      console.log(this.totalAmountAfterPrepayment);\n      console.log(this.initialTotalAmount);\n      this.amountSaved = this.initialTotalAmount - this.totalAmountAfterPrepayment;\n      console.log(Math.abs(this.amountSaved.toFixed(2))); //finding total savings\n    }\n\n    list() {}\n\n  }\n\n  PaymenttableComponent.ɵfac = function PaymenttableComponent_Factory(t) {\n    return new (t || PaymenttableComponent)(i0.ɵɵdirectiveInject(i1.CalculationService));\n  };\n\n  PaymenttableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PaymenttableComponent,\n    selectors: [[\"app-paymenttable\"]],\n    decls: 1,\n    vars: 0,\n    consts: [[3, \"click\"]],\n    template: function PaymenttableComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function PaymenttableComponent_Template_button_click_0_listener() {\n          return ctx.onclickcall();\n        });\n        i0.ɵɵelementEnd();\n      }\n    }\n  });\n  return PaymenttableComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}