{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth-service/auth-service.service\";\nimport * as i2 from \"src/app/services/routing.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/flex-layout/flex\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/card\";\nimport * as i9 from \"@angular/forms\";\nimport * as i10 from \"@angular/material/icon\";\nimport * as i11 from \"../footer/footer.component\";\n\nfunction LoginComponent_p_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.message);\n  }\n}\n\nfunction LoginComponent_mat_error_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Please enter the customer ID to proceed \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_mat_error_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Please enter Password. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(authService, routingService) {\n      this.authService = authService;\n      this.routingService = routingService;\n      this.message = '';\n      this.hide = true;\n    }\n\n    onlogin() {\n      //const user = this.userlist.find(obj => obj.customerid===customerid && obj.password===password);\n      var flag = false;\n\n      if (this.loginForm.valid) {\n        //alert('login successful');    \n        //after the login is successful, we are storing the username in the session storage\n        this.user = {\n          custid: this.loginForm.get(\"customerid\")?.value,\n          password: this.loginForm.get(\"password\")?.value\n        };\n        this.authService.validateUser(this.user).subscribe(res => {\n          console.log(res);\n\n          if (res.token != null) {\n            sessionStorage.setItem(\"loginkey\", this.loginForm.get('customerid')?.value); //console.log(res.token);\n\n            flag = true;\n            sessionStorage.setItem(\"token\", res.token);\n            environment.maintoken = res.token;\n            environment.loggedUser = this.loginForm.get(\"customerid\")?.value.toString();\n            this.routingService.accessDashboard();\n            this.loginForm.reset();\n          } else {}\n        }, error => {\n          console.error('error caught in component');\n          this.message = \"Please enter Valid credentials\"; //throw error;   //You can also throw the error to a global error handler\n        });\n        console.log(sessionStorage.getItem(\"token\"));\n      }\n    }\n\n    accessForget() {\n      return this.routingService.accessForget();\n    }\n\n    get f() {\n      return this.loginForm.controls;\n    }\n\n    ngOnInit() {\n      this.loginForm = new FormGroup({\n        customerid: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required, Validators.minLength(6)])\n      }); //this.userService.fetchusers().subscribe(res => this.userlist=res);\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthServiceService), i0.ɵɵdirectiveInject(i2.RoutingService));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 26,\n    vars: 8,\n    consts: [[1, \"header\"], [\"src\", \"../../../assets/natwest_logo.PNG\", 1, \"logo\"], [1, \"main-div\"], [1, \"cards\"], [\"name\", \"loginForm\", \"fxLayoutAlign\", \"stretch\", \"fxLayout\", \"column\", 1, \"login-form\", 3, \"formGroup\", \"ngSubmit\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"number\", \"name\", \"customerid\", \"formControlName\", \"customerid\", \"required\", \"\"], [\"customerid\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"password\", \"name\", \"password\", \"formControlName\", \"password\", \"required\", \"\", 3, \"type\"], [\"password\", \"\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"loginbtn\"], [1, \"alert\", \"alert-danger\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"img\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"mat-card\", 3)(4, \"h1\");\n        i0.ɵɵtext(5, \"Welcome to NatWest Online Loan Payment Facility \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.onlogin();\n        });\n        i0.ɵɵtemplate(7, LoginComponent_p_7_Template, 2, 1, \"p\", 5);\n        i0.ɵɵelementStart(8, \"mat-form-field\")(9, \"mat-label\");\n        i0.ɵɵtext(10, \"CustomerId\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 6, 7);\n        i0.ɵɵtemplate(13, LoginComponent_mat_error_13_Template, 2, 0, \"mat-error\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"mat-form-field\")(15, \"mat-label\");\n        i0.ɵɵtext(16, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 9, 10);\n        i0.ɵɵelementStart(19, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_19_listener() {\n          return ctx.hide = !ctx.hide;\n        });\n        i0.ɵɵelementStart(20, \"mat-icon\");\n        i0.ɵɵtext(21);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(22, LoginComponent_mat_error_22_Template, 2, 0, \"mat-error\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"button\", 12);\n        i0.ɵɵtext(24, \"Login\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(25, \"app-footer\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.message);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.f[\"customerid\"].errors == null ? null : ctx.f[\"customerid\"].errors[\"required\"]);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"type\", ctx.hide ? \"password\" : \"text\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵattribute(\"aria-label\", \"Hide password\")(\"aria-pressed\", ctx.hide);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.hide ? \"visibility_off\" : \"visibility\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.f[\"password\"].errors == null ? null : ctx.f[\"password\"].errors[\"required\"]);\n      }\n    },\n    dependencies: [i3.NgIf, i4.DefaultLayoutDirective, i4.DefaultLayoutAlignDirective, i5.MatError, i5.MatFormField, i5.MatLabel, i5.MatSuffix, i6.MatInput, i7.MatButton, i8.MatCard, i9.ɵNgNoValidate, i9.DefaultValueAccessor, i9.NumberValueAccessor, i9.NgControlStatus, i9.NgControlStatusGroup, i9.RequiredValidator, i9.FormGroupDirective, i9.FormControlName, i10.MatIcon, i11.FooterComponent],\n    styles: [\".main-div[_ngcontent-%COMP%]{padding-top:22vh;width:40vw;margin:auto}.logo[_ngcontent-%COMP%]{width:12vw;margin-left:10vw;margin-top:1vw}.login-form[_ngcontent-%COMP%]{padding-left:.7vw;padding-right:.7vw}.alink[_ngcontent-%COMP%]{float:right;font-size:1em}.header[_ngcontent-%COMP%]{width:100vw;height:11vh;background-color:#42145f}h1[_ngcontent-%COMP%]{font-weight:700;padding-left:3vw;font-size:1.5em;font-family:Helvetica,sans-serif}.loginbtn[_ngcontent-%COMP%]{background-color:#42145f}@media only screen and (max-width: 430px){.main-div[_ngcontent-%COMP%]{width:90%;overflow:scroll}.logo[_ngcontent-%COMP%]{margin-top:1vh;width:30%;margin-left:6vw}.header[_ngcontent-%COMP%]{height:56px}}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}